1. Provide the list of markets in which customer "Atliq Exclusive" operates its business in the APAC region.
SELECT 
	market
FROM dim_customer
where customer = "Atliq Exclusive"
AND region = "APAC";

2. What is the percentage of unique product increase in 2021 vs. 2020? The final output contains these fields, unique_products_2020 unique_products_2021 percentage_chg.

with cte1 as
(select
	product_code,
	count(distinct(product_code)) as unique_products_2020
FROM fact_sales_monthly
where fiscal_year = 2020),
cte2 as
(select 
	product_code,
	count(distinct(product_code)) as unique_products_2021
FROM fact_sales_monthly
where fiscal_year = 2021)
select
	c1.unique_products_2020,
    c2.unique_products_2021,
    round(((c2.unique_products_2021 - c1.unique_products_2020) / c1.unique_products_2020),2) * 100 
AS PercentageChange
FROM cte1 c1 
JOIN cte2 c2 on c1.product_code = c2.product_code;

3. Provide a report with all the unique product counts for each segment and sort them in descending order of product counts. The final output contains 2 fields, segment product_count.
4. Follow-up: Which segment had the most increase in unique products in 2021 vs 2020? The final output contains these fields, segment product_count_2020 product_count_2021 difference.

with cte1 as 
(SELECT
	customer_code,
	segment,
	COUNT(distinct(s.product_code)) as product_count_2020
from dim_product d
JOIN fact_sales_monthly s ON
d.product_code = s.product_code
WHERE s.fiscal_year = 2020
GROUP BY segment
order by product_count_2020 DESC),
cte2 as 
(SELECT
	customer_code,
	segment,
	COUNT(distinct(s.product_code)) as product_count_2021
from dim_product d
JOIN fact_sales_monthly s ON
d.product_code = s.product_code
WHERE s.fiscal_year = 2021
GROUP BY segment
order by product_count_2021 DESC)
SELECT
	c1.segment,
    c2.product_count_2021,
    c1.product_count_2020,
    (c2.product_count_2021-c1.product_count_2020) as difference
FROM cte1 c1
JOIN cte2 c2 ON
c1.segment = c2.segment
ORDER BY difference DESC;


5. Get the products that have the highest and lowest manufacturing costs. The final output should contain these fields, product_code product manufacturing_cost.

SELECT F.product_code, P.product, F.manufacturing_cost 
FROM fact_manufacturing_cost F JOIN dim_product P
ON F.product_code = P.product_code
WHERE manufacturing_cost
IN (
	SELECT MAX(manufacturing_cost) FROM fact_manufacturing_cost
    UNION
    SELECT MIN(manufacturing_cost) FROM fact_manufacturing_cost
    ) 
ORDER BY manufacturing_cost DESC ;

6. Generate a report which contains the top 5 customers who received an average high pre_invoice_discount_pct for the fiscal year 2021 and in the Indian market. The final output contains these fields, customer_code customer average_discount_percentage.

SELECT
	customer,
    d.customer_code,
    round(AVG(pre_invoice_discount_pct),2) as average_discount_percentage
from dim_customer d
JOIN fact_pre_invoice_deductions fp
USING (customer_code)
WHERE d.market = "India" AND
fp.fiscal_year = 2021
GROUP BY d.customer_code,customer
ORDER BY average_discount_percentage DESC
LIMIT 5;

7. Get the complete report of the Gross sales amount for the customer “Atliq Exclusive” for each month . This analysis helps to get an idea of low and high-performing months and take strategic decisions. The final report contains these columns: Month Year Gross sales Amount.

SELECT
	DATE_FORMAT(date, '%b') as Month,
    YEAR(date) as Year, 
    Concat(round(SUM(sold_quantity * gross_price)/1000000,2)," M") as Gross_Sales_Amount
FROM fact_sales_monthly s
JOIN fact_gross_price g ON s.product_code = g.product_code
JOIN dim_customer d ON s.customer_code = d.customer_code
WHERE  d.customer = "Atliq Exclusive"
GROUP BY YEAR(s.date),DATE_FORMAT(s.date, '%b');


8. In which quarter of 2020, got the maximum total_sold_quantity? The final output contains these fields sorted by the total_sold_quantity, Quarter total_sold_quantity.

WITH cte1 as (
SELECT
	get_quarters(date) as Quarters,
    sold_quantity
FROM fact_sales_monthly
WHERE fiscal_year = 2020)
SELECT
	Quarters,
    CONCAT(Round(SUM(sold_quantity)/1000000,1)," M") as total_sold_quantity
FROM cte1
group by Quarters;


9. Which channel helped to bring more gross sales in the fiscal year 2021 and the percentage of contribution? The final output contains these fields, channel gross_sales_mln percentage.
with cte1 as (
SELECT
	round(SUM(gross_price * sold_quantity)/1000000,1) as Total_Gross_Sales
FROM fact_sales_monthly s
JOIN fact_gross_price g ON s.product_code = g.product_code
WHERE s.fiscal_year = 2021),
cte2 as(
SELECT
	channel,
    round(SUM(gross_price * sold_quantity)/1000000,1) as Gross_Sales_Amt,
    Total_Gross_Sales
FROM fact_sales_monthly s
JOIN dim_customer d ON s.customer_code = d.customer_code
JOIN fact_gross_price g ON s.product_code = g.product_code
CROSS JOIN cte1 c
WHERE s.fiscal_year = 2021
GROUP BY channel,Total_Gross_Sales)
SELECT
		channel,
        Gross_sales_Amt,
        round((Gross_Sales_Amt/Total_Gross_Sales)*100,2) As Percent_Contrib
FROM cte2;

10. Get the Top 3 products in each division that have a high total_sold_quantity in the fiscal_year 2021? The final output contains these fields, division product_code codebasics.io
product total_sold_quantity rank_order Note.
with cte1 as(
SELECT
	division, 
	s.product_code,
	product,
	SUM(sold_quantity) as total_sales
FROM fact_sales_monthly s
JOIN dim_product p ON s.product_code = p.product_code
Where fiscal_year = 2021
GROUP BY division,s.product_code,product
),
cte2 as(
SELECT
	*,
    rank() over(partition by division order by total_sales desc) as rank_num
FROM cte1)
SELECT
	*
FROM cte2
WHERE rank_num <=3;